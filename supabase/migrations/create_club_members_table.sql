/*
      # Create club_members table

      1. New Tables
        - `club_members`
          - `id` (BIGINT, primary key, generated by default as identity)
          - `last_name` (TEXT, not null)
          - `first_name` (TEXT, not null)
          - `date_of_birth` (DATE, not null)
          - `place_of_birth` (TEXT)
          - `role` (TEXT)
          - `blood_type` (TEXT)
          - `national_id_number` (TEXT, unique)
          - `password` (TEXT)
          - `license_number` (TEXT, unique, not null)
          - `registration_date` (DATE, not null, default current_date)
          - `logo_url` (TEXT)
          - `club_id` (BIGINT, references public.clubs(id), on delete cascade)
          - `league_id` (BIGINT, references public.leagues(id), on delete cascade)

      2. Security
        - Enable RLS on `club_members` table
        - Add policy for authenticated users to insert
        - Add policy for authenticated users to select their own data
    */

    CREATE TABLE IF NOT EXISTS public.club_members (
      id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
      last_name TEXT NOT NULL,
      first_name TEXT NOT NULL,
      date_of_birth DATE NOT NULL,
      place_of_birth TEXT,
      role TEXT, -- coming from clubrole table
      blood_type TEXT,
      national_id_number TEXT UNIQUE,
      password TEXT, -- (⚠️ recommend hashing instead of plain text)
      license_number TEXT UNIQUE NOT NULL,
      registration_date DATE NOT NULL DEFAULT CURRENT_DATE,
      logo_url TEXT,
      club_id BIGINT REFERENCES public.clubs(id) ON DELETE CASCADE,
      league_id BIGINT REFERENCES public.leagues(id) ON DELETE CASCADE
    );

    ALTER TABLE public.club_members ENABLE ROW LEVEL SECURITY;

    CREATE POLICY "Allow authenticated users to insert" ON public.club_members FOR
    INSERT TO authenticated WITH CHECK (TRUE);

    CREATE POLICY "Allow authenticated users to select their own data" ON public.club_members FOR
    SELECT TO authenticated USING (auth.uid() = club_id::text);
